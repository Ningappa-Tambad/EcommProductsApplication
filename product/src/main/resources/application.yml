#spring:
#  application:
#    name: product-service
#  config:
#    import: optional:configserver:http://localhost:8888
#server:
#  port: 8081

spring:
  config:
    import: optional:configserver:http://localhost:8888
  application:
    name: application-product-service
  datasource:
    url: jdbc:postgresql://localhost:5432/product
    username: embarkx
    password: embarkx
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

server:
  port: 8081

logging:
  level:
    org:
      springframework:
        web: DEBUG
        http:
          converter: DEBUG



#spring.application.name=product-service
#h2database
#spring.h2.console.enabled=true
#server.port=8081
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#POSTGRESS SQL

#spring.datasource.url=jdbc:postgresql://localhost:5432/product
#server.port=8081
#spring.datasource.username=embarkx
#spring.datasource.password=embarkx
#spring.datasource.jpa.database=POSTGRESQL
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.http.converter=DEBUG

#connecting remote  postgres sql data base in cloud

#spring.datasource.url=jdbc:postgresql://ep-holy-bird-a5cbjjg3-pooler.us-east-2.aws.neon.tech/product?sslmode=require
#server.port=8081
#spring.datasource.username=product_owner
#spring.datasource.password=npg_MRso21XYUIGv
#spring.datasource.jpa.database=POSTGRESQL
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework.http.converter=DEBUG


#Connect to MYSQL
#create database productservice;
#create user productserviceuser;
#grant all privileges on productservice.* to productserviceuser;

#server.port=8081
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/microservicesdb
#spring.datasource.username=myuser
##spring.datasource.password=secret
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true
#hibernate.dialect=org.hibernate.dialect.MySQLDialect

#create database microservicesdb;
#create user myuser;
#grant all privileges on microservicesdb.* to myuser;

#Connect to docker MYSQL

#server.port=8081
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3307/embarkx
#spring.datasource.username=embarkx
#spring.datasource.password=embarkx
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true
#hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Import from configserver

